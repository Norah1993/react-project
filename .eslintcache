[{"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/index.js":"1","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/reportWebVitals.js":"2","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/App.js":"3","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/shared/dishes.js":"4","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Menu.js":"5","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Dishdetail.js":"6","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Main.js":"7","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Header.js":"8","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Footer.js":"9","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Home.js":"10","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Contact.js":"11","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/shared/comments.js":"12","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/shared/ promotions.js":"13","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/shared/leaders.js":"14","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/About.js":"15","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/configureStore.js":"16","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/dishes.js":"17","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/comments.js":"18","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/leaders.js":"19","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/promotions.js":"20","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/ActionTypes.js":"21","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/ActionCreators.js":"22"},{"size":307,"mtime":1608108615530,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1607319439281,"results":"25","hashOfConfig":"24"},{"size":537,"mtime":1609262877008,"results":"26","hashOfConfig":"24"},{"size":1290,"mtime":1608120387238,"results":"27","hashOfConfig":"24"},{"size":1132,"mtime":1608212360004,"results":"28","hashOfConfig":"24"},{"size":5218,"mtime":1609352000779,"results":"29","hashOfConfig":"24"},{"size":2222,"mtime":1609352246649,"results":"30","hashOfConfig":"24"},{"size":4596,"mtime":1608554041546,"results":"31","hashOfConfig":"24"},{"size":2931,"mtime":1608107827473,"results":"32","hashOfConfig":"24"},{"size":970,"mtime":1608189638878,"results":"33","hashOfConfig":"24"},{"size":8880,"mtime":1608585953739,"results":"34","hashOfConfig":"24"},{"size":3603,"mtime":1608120475584,"results":"35","hashOfConfig":"24"},{"size":424,"mtime":1608120514941,"results":"36","hashOfConfig":"24"},{"size":2297,"mtime":1608120540373,"results":"37","hashOfConfig":"24"},{"size":3893,"mtime":1608284231483,"results":"38","hashOfConfig":"24"},{"size":432,"mtime":1609262900800,"results":"39","hashOfConfig":"24"},{"size":161,"mtime":1609262955279,"results":"40","hashOfConfig":"24"},{"size":443,"mtime":1609351654542,"results":"41","hashOfConfig":"24"},{"size":165,"mtime":1609262972586,"results":"42","hashOfConfig":"24"},{"size":178,"mtime":1609262986582,"results":"43","hashOfConfig":"24"},{"size":41,"mtime":1609350845951,"results":"44","hashOfConfig":"24"},{"size":276,"mtime":1609350914708,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"10xoija",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/index.js",[],["95","96"],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/reportWebVitals.js",[],["97","98"],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/App.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/shared/dishes.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Menu.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Dishdetail.js",["99","100","101"],"import React, { Component } from 'react';\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Label,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Col,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst maxLength = len => val => !val || val.length <= len;\nconst minLength = len => val => val && val.length >= len;\n\nconst RenderDish = ({ dish }) => {\n  return (\n    <div className=\"col-12 col-md-5 m-1\">\n      <Card>\n        <CardImg src={dish.image} alt={dish.name} />\n        <CardBody>\n          <CardTitle>{dish.name}</CardTitle>\n          <CardText>{dish.description}</CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nconst RenderComments = ({ comments, addComment, dishId }) => {\n  return (\n    <div className=\"col-12 col-md-5 m-1\">\n      <h4>Comments</h4>\n      <ul className=\"list-unstyled\">\n        {comments.map(comment => {\n          const date = new Date(comment.date);\n          const dateTimeFormat = new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n          });\n          return (\n            <li key={comment.id}>\n              <p>{comment.comment}</p>\n              <p>\n                --{comment.author} , {dateTimeFormat.format(date)}\n              </p>\n            </li>\n          );\n        })}\n      </ul>\n      <CommentForm dishId={dishId} addComment={addComment} />\n    </div>\n  );\n};\n\nclass CommentForm extends Component {\n  state = {\n    isModalOpen: false,\n  };\n\n  toggleModal = () => {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  };\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.addComment(\n      this.props.dishId,\n      values.rating,\n      values.author,\n      values.comment\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Button outline onClick={this.toggleModal}>\n          <span className=\"fa fa-pencil fa-lg\"> Submit Comment</span>\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Col>\n                  <Label htmlFor=\"rating\">Rating </Label>\n                  <Control.select\n                    model=\".rating\"\n                    id=\"rating\"\n                    name=\"rating\"\n                    className=\"form-control\"\n                  >\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col>\n                  <Label htmlFor=\"author\">Your Name</Label>\n                  <Control.text\n                    model=\".author\"\n                    id=\"author\"\n                    name=\"author\"\n                    placeholder=\"Your Name\"\n                    className=\"form-control\"\n                    validators={{\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".author\"\n                    show=\"touched\"\n                    messages={{\n                      minLength: 'Must be greater than 2 characters',\n                      maxLength: 'Must be 15 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col>\n                  <Label htmlFor=\"comment\">Comment</Label>\n                  <Control.textarea\n                    model=\".comment\"\n                    id=\".comment\"\n                    name=\".comment\"\n                    className=\"form-control\"\n                    rows=\"6\"\n                  />\n                </Col>\n              </Row>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst Dishdetail = props => {\n  if (props !== null) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/menu\">Menu</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>{props.dish.name}</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderDish dish={props.dish} />\n\n          <RenderComments\n            comments={props.comments}\n            addComment={props.addComment}\n            dishId={props.dish.id}\n          />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Dishdetail;\n","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Main.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Header.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Footer.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Home.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/Contact.js",["102","103","104","105","106","107","108","109"],"import React, { Component } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Row,\n  Col,\n  Label,\n} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || val.length <= len;\nconst minLength = len => val => val && val.length >= len;\nconst isNumber = val => !isNaN(Number(val));\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n  handleSubmit(values) {\n    console.log('Current State is: ' + JSON.stringify(values));\n    alert('Current State is: ' + JSON.stringify(values));\n    // event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/home\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>Contact Us</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Location Information</h3>\n          </div>\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\n            <h5>Our Address</h5>\n            <address>\n              121, Clear Water Bay Road\n              <br />\n              Clear Water Bay, Kowloon\n              <br />\n              HONG KONG\n              <br />\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\n              <br />\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\n              <br />\n              <i className=\"fa fa-envelope\"></i>:{' '}\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n            </address>\n          </div>\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\n            <h5>Map of our Location</h5>\n          </div>\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\n            <div className=\"btn-group\" role=\"group\">\n              <a\n                role=\"button\"\n                className=\"btn btn-primary\"\n                href=\"tel:+85212345678\"\n              >\n                <i className=\"fa fa-phone\"></i> Call\n              </a>\n              <a role=\"button\" className=\"btn btn-info\">\n                <i className=\"fa fa-skype\"></i> Skype\n              </a>\n              <a\n                role=\"button\"\n                className=\"btn btn-success\"\n                href=\"mailto:confusion@food.net\"\n              >\n                <i className=\"fa fa-envelope-o\"></i> Email\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Send Us Your Feedback</h3>\n          </div>\n          <div className=\"col-12 col-md-9\">\n            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstname\" md={2}>\n                  First Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".firstname\"\n                    id=\"firstname\"\n                    name=\"firstname\"\n                    placeholder=\"First Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".firstname\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 characters',\n                      maxLength: 'Must be 15 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastname\" md={2}>\n                  Last Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".lastname\"\n                    id=\"lastname\"\n                    name=\"lastname\"\n                    placeholder=\"Last Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".lastname\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 characters',\n                      maxLength: 'Must be 15 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"telnum\" md={2}>\n                  Contact Tel.\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".telnum\"\n                    id=\"telnum\"\n                    name=\"telnum\"\n                    placeholder=\"Tel. Number\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                      isNumber,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".telnum\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 numbers',\n                      maxLength: 'Must be 15 numbers or less',\n                      isNumber: 'Must be a number',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>\n                  Email\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      validEmail,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".email\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Invalid Email Address',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 6, offset: 2 }}>\n                  <div className=\"form-check\">\n                    <Label check>\n                      <Control.checkbox\n                        model=\".agree\"\n                        name=\"agree\"\n                        className=\"form-check-input\"\n                      />{' '}\n                      <strong>May we contact you?</strong>\n                    </Label>\n                  </div>\n                </Col>\n                <Col md={{ size: 3, offset: 1 }}>\n                  <Control.select\n                    model=\".contactType\"\n                    name=\"contactType\"\n                    className=\"form-control\"\n                  >\n                    <option>Tel.</option>\n                    <option>Email</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"message\" md={2}>\n                  Your Feedback\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model=\".message\"\n                    id=\"message\"\n                    name=\"message\"\n                    rows=\"12\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Send Feedback\n                  </Button>\n                </Col>\n              </Row>\n            </LocalForm>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/shared/comments.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/shared/ promotions.js",[],["110","111"],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/shared/leaders.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/components/About.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/configureStore.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/dishes.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/comments.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/leaders.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/promotions.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/ActionTypes.js",[],"/Users/norahalshehri/Desktop/coursera/myfirstreactapp/src/redux/ActionCreators.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":99,"column":19,"nodeType":"120","endLine":104,"endColumn":20},{"ruleId":"118","severity":1,"message":"121","line":116,"column":19,"nodeType":"120","endLine":126,"endColumn":21},{"ruleId":"118","severity":1,"message":"122","line":141,"column":19,"nodeType":"120","endLine":147,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":74,"column":15,"nodeType":"120","endLine":74,"endColumn":57},{"ruleId":"118","severity":1,"message":"121","line":98,"column":19,"nodeType":"120","endLine":109,"endColumn":21},{"ruleId":"118","severity":1,"message":"121","line":127,"column":19,"nodeType":"120","endLine":138,"endColumn":21},{"ruleId":"118","severity":1,"message":"121","line":156,"column":19,"nodeType":"120","endLine":168,"endColumn":21},{"ruleId":"118","severity":1,"message":"121","line":187,"column":19,"nodeType":"120","endLine":197,"endColumn":21},{"ruleId":"118","severity":1,"message":"125","line":213,"column":23,"nodeType":"120","endLine":217,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":223,"column":19,"nodeType":"120","endLine":227,"endColumn":20},{"ruleId":"118","severity":1,"message":"122","line":238,"column":19,"nodeType":"120","endLine":244,"endColumn":21},{"ruleId":"112","replacedBy":"126"},{"ruleId":"114","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],["128"],["129"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["128"],["129"],"no-global-assign","no-unsafe-negation"]